{% extends 'base_back.html.twig' %}

{% block title %}Statistiques des Stocks{% endblock %}

{% block body %}
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <canvas id="barChart" width="300" height="200"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <canvas id="areaChart" width="800" height="520"></canvas>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="row ">
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <canvas id="mixedChart1" width="300" height="200"></canvas>
                    </div>
                </div>
            </div>
          
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                      
                        <canvas id="mixedChart2" width="800" height="520"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row ">
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <p style="font-size:15px;margin-left:170px ; ">Coût de chaque stock</p>
                        <canvas id="doughnutChart" width="400" height="400" ></canvas>

        </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix"></script>
        {# Quantité totale en fonction de la date d\'arrivage #}
        <script>
document.addEventListener('DOMContentLoaded', function () {
    // Récupération des données depuis Twig
    const dataFromTwig = {
        stocks: [
            {% for stock in stocks %}
                {
                    nom: "{{ stock.nom }}",
                    dateArrivage: "{{ stock.dateArrivage|date('Y-m-d') }}",
                    quantite: {{ stock.quantite }}
                },
            {% endfor %}
        ]
    };

    // Date actuelle
    const currentDate = new Date();

    // Filtrer les stocks en fonction de la date d'arrivage par rapport à la date actuelle
    const pastStocks = dataFromTwig.stocks.filter(stock => new Date(stock.dateArrivage) < currentDate);
    const futureStocks = dataFromTwig.stocks.filter(stock => new Date(stock.dateArrivage) > currentDate);

    // Calcul des quantités totales pour les stocks passés
    const totalQuantityPast = pastStocks.reduce((total, stock) => total + stock.quantite, 0);

    // Calcul des quantités totales pour les stocks futurs
    const totalQuantityFuture = futureStocks.reduce((total, stock) => total + stock.quantite, 0);

    // Création du graphique en barres pour les quantités totales en fonction de la date d'arrivage
    var ctx = document.getElementById('mixedChart2').getContext('2d');
    var mixedChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Stocks Existants', 'Stocks En arrivage'],
            datasets: [{
                label: 'Quantité totale',
                data: [totalQuantityPast, totalQuantityFuture],
                backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)'],
                borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            title: {
                display: true,
                text: 'Quantité totale en fonction de la date d\'arrivage',
                font: {
                    size: 18
                }
            }
        }
    });
});

</script>
{# Quantité totale par mois #}
        <script>
document.addEventListener('DOMContentLoaded', function () {
    // Récupération des données depuis Twig
    const dataFromTwig = {
        stocks: [
            {% for stock in stocks %}
                {
                    nom: "{{ stock.nom }}",
                    dateArrivage: "{{ stock.dateArrivage|date('Y-m-d') }}",
                    quantite: {{ stock.quantite }}
                },
            {% endfor %}
        ]
    };

    // Création d'un objet pour stocker les quantités par mois
    const quantitiesByMonth = {};

    // Parcourir les stocks pour calculer les quantités totales par mois
    dataFromTwig.stocks.forEach(stock => {
        const month = new Date(stock.dateArrivage).getMonth();
        if (!quantitiesByMonth[month]) {
            quantitiesByMonth[month] = 0;
        }
        quantitiesByMonth[month] += stock.quantite;
    });

    // Création des labels pour l'axe x (les mois)
    const labels = [];
    for (let month = 0; month < 12; month++) {
        labels.push(getMonthName(month));
    }

    // Création du dataset pour la quantité par mois
    const data = [];
    for (let month = 0; month < 12; month++) {
        data.push(quantitiesByMonth[month] || 0);
    }

    // Création du graphique en barres pour la quantité par mois
    var ctx = document.getElementById('mixedChart1').getContext('2d');
    var mixedChart = new Chart(ctx, {
        type: 'bar', // Utiliser un graphique en barres
        data: {
            labels: labels,
            datasets: [{
                label: 'Quantité par mois',
                data: data,
                backgroundColor: 'rgba(255, 99, 132, 0.5)', // Couleur de fond
                borderColor: 'rgba(255, 99, 132, 1)', // Couleur de la bordure
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Mois d\'arrivage' // Titre de l'axe des abscisses
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Quantité' // Titre de l'axe des ordonnées
                    },
                    ticks: {
                        beginAtZero: true // Commencer l'axe y à zéro
                    }
                }
            },
            title: {
                display: true,
                text: 'Quantité totale par mois', // Titre du graphique en barres
                font: {
                    size: 18 // Taille de la police du titre
                }
            }
        }
    });

    // Fonction pour obtenir le nom complet du mois à partir de son numéro
    function getMonthName(month) {
        const monthNames = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];
        return monthNames[month];
    }
});

        </script>
        
        
        {# Nombre vendus par stock #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Récupération des données depuis Twig
        const dataFromTwig = {
            stocks: [
                {% for stock in stocks %}
                    {
                        id: {{ stock.id_s }},
                        nom: "{{ stock.nom }}",
                        nbvendu: {{ stock.nbvendu }}
                    },
                {% endfor %}
            ]
        };
        
        // Générer des couleurs aléatoires pour chaque barre
        function generateRandomColor() {
            const r = Math.floor(Math.random() * 256);
            const g = Math.floor(Math.random() * 256);
            const b = Math.floor(Math.random() * 256);
            return `rgba(${r}, ${g}, ${b}, 0.5)`;
        }

        // Créer un tableau de couleurs aléatoires pour chaque barre
        const colors = Array.from({ length: dataFromTwig.stocks.length }, () => generateRandomColor());

        // Création du bar chart
        var ctx = document.getElementById('barChart').getContext('2d');
        var barChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: dataFromTwig.stocks.map(stock => stock.nom), // Utiliser les noms des stocks comme étiquettes sur l'axe x
                datasets: [{
                    label: 'Nombre vendu',
                    data: dataFromTwig.stocks.map(stock => stock.nbvendu), // Utiliser les nombres vendus comme valeurs sur l'axe y
                    backgroundColor: colors, // Utiliser les couleurs aléatoires générées
                    borderColor: 'rgba(255,255,255,1)',
                    borderWidth: 1 // Épaisseur de la bordure
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Stock' // Titre de l'axe des abscisses
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Nombre vendu par stock'
                        },
                        ticks: {
                            stepSize: 10 // Définir l'intervalle de 10 sur l'axe y
                        }
                    }
                },
                title: {
                    display: true,
                    text: 'Nombre vendus par stock', // Titre du graphique à barres
                    font: {
                        size: 18 // Taille de la police du titre
                    }
                }
            }
        });
    });
    
</script>
{# Quantité par stock #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Récupération des données depuis Twig
        const dataFromTwig = {
            stocks: [
                {% for stock in stocks %}
                    {
                        nom: "{{ stock.nom }}",
                        quantite: {{ stock.quantite }}
                    },
                {% endfor %}
            ]
        };

        // Création des étiquettes et des données pour le graphique en aires
        const labels = dataFromTwig.stocks.map(stock => stock.nom);
        const data = dataFromTwig.stocks.map(stock => stock.quantite);

        // Création du graphique en aires
        var ctx = document.getElementById('areaChart').getContext('2d');
        var areaChart = new Chart(ctx, {
            type: 'line', // Utiliser un graphique en ligne pour un graphique en aires
            data: {
                labels: labels, // Utiliser les noms des stocks comme étiquettes sur l'axe x
                datasets: [{
                    label: 'Quantité par stock',
                    data: data, // Utiliser les quantités des stocks comme données sur l'axe y
                    fill: true, // Remplir l'aire sous la courbe
                    backgroundColor: 'rgba(75, 192, 192, 0.2)', // Couleur de fond de l'aire
                    borderColor: 'rgba(75, 192, 192, 1)', // Couleur de la ligne
                    borderWidth: 1 // Épaisseur de la ligne
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Stock' // Titre de l'axe des abscisses
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Quantité' // Titre de l'axe des ordonnées
                        },
                        ticks: {
                            stepSize: 10 // Définir l'intervalle de 10 sur l'axe y
                        }
                    }
                },
                title: {
                    display: true,
                    text: 'Quantité par stock', // Titre du graphique en aires
                    font: {
                        size: 18 // Taille de la police du titre
                    }
                }
            }
        });
    });
</script>
{# Coût de chaque stock #}
<script>

  document.addEventListener('DOMContentLoaded', function () {
    // Récupération des données depuis Twig ou tout autre source de données
    const dataFromTwig = {
      stocks: [
        {% for stock in stocks %}
          {
            nom: "{{ stock.nom }}",
            cout: {{ stock.cout }}
          },
        {% endfor %}
      ]
    };

    // Extraction des noms et des coûts des stocks
    const labels = dataFromTwig.stocks.map(stock => stock.nom);
    const costs = dataFromTwig.stocks.map(stock => stock.cout);

    // Création du graphique Doughnut
    var ctx = document.getElementById('doughnutChart').getContext('2d');
    var doughnutChart = new Chart(ctx, {
      type: 'doughnut',
      data: {
        labels: labels,
        datasets: [{
          label: 'Coût des stocks',
          data: costs,
          backgroundColor: [
            'rgba(255, 99, 132, 0.5)',
            'rgba(54, 162, 235, 0.5)',
            'rgba(255, 206, 86, 0.5)',
            'rgba(75, 192, 192, 0.5)',
            'rgba(153, 102, 255, 0.5)',
            'rgba(255, 159, 64, 0.5)'
            // Ajoutez plus de couleurs si nécessaire
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
            // Ajoutez plus de couleurs si nécessaire
          ],
          borderWidth: 1
        }]
      },
      options: {
        
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Coût de chaque stock'
          },
          
          legend: {
            display: true,
            position: 'bottom'
          },
          datalabels: {
            color: '#fff',
            formatter: function(value, context) {
              return context.chart.data.labels[context.dataIndex] + ': ' + value;
            }
          }
        }
      }
    });
  });

</script>

{% endblock %}