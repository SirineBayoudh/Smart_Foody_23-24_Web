{% extends 'base_back.html.twig' %}

{% block title %}Hello ProductDashController!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 1200px; width: 150%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    .custom-table-width {
    width: 100%;
    }

    .table-striped tbody tr:hover {
        background-color: #bbddab; /* Couleur de fond au survol */
        color: #fff; /* Couleur du texte au survol */
    }
    .thead-green {
        background-color: #77bb58;
        color: white;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    .table-striped tbody tr:hover {
        background-color: #bbddab; /* Couleur de fond au survol */
        color: #fff; /* Couleur du texte au survol */
    }

    /* Styles pour les boutons */
    .btn {
        /* Styles normaux des boutons */
        background-color: #56ab2f;
        border-color: #56ab2f;
        color: #ffffff; /* Couleur du texte */
        transition: background-color 0.3s; /* Transition fluide pour la couleur de fond */
    }

    /* Styles pour les boutons lorsqu'ils sont survolés */
    .btn:hover {
        background-color: #72c22f; /* Nouvelle couleur de fond */
    }
    .btn.dropdown-toggle:focus {
    background-color: #ffffff; /* Couleur de fond du bouton lorsqu'il est ouvert */
    color: #000000; /* Couleur du texte du bouton lorsqu'il est ouvert */
}
.thead-green {
        background-color: #77bb58;
        color: white;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    #searchInput {
    padding: 10px; /* Ajoute du rembourrage autour du texte dans l'input */
    width: 300px; /* Définit la largeur de l'input */
    border: 1px solid #ccc; /* Ajoute une bordure grise */
    border-radius: 5px; /* Ajoute un bord arrondi */
    font-size: 16px; /* Définit la taille de la police */
    outline: none; /* Supprime la bordure autour de l'input lorsqu'il est en focus */
}

#searchInput::placeholder {
    color: #999; /* Couleur du texte de l'attribut placeholder */
}
</style>

<div class="example-wrapper">
    <div class="col-lg-24 grid-margin stretch-card">
        <div class="card">
          <div class="card-body">
            <h2 class="card-title">Table des produits</h2>
            <div class="row mb-4">
                <div class="col text-right mb-4">
                    <a href="{{ path('add_product') }}" class="btn btn-primary btn-sm mr-5 hover-effect" style="background-color: #56ab2f; border-color: #56ab2f;" 
                        onmouseover="this.style.backgroundColor='#bbddab'; this.style.color=''; this.style.borderColor='#bbddab';" 
                        onmouseout="this.style.backgroundColor='#56ab2f'; this.style.color=''; this.style.borderColor='#56ab2f';">
                        <i class="ti-plus"></i>
                            Ajouter produit
                    </a>

                    <select id="critere" name="critere" onchange="filterObjectifs(); resetButtonStyle();" class="btn btn-primary btn-sm dropdown-toggle mr-5">
                            <option value="">Tous les critères</option>
                                {% for critere in criteres %}
                            <option value="{{ critere }}">{{ critere }}</option>
                                {% endfor %}
                    </select>

                    <input type="text" name="search" id="searchInput" class="mr-2" placeholder="Rechercher par marque...">

                    <button class="btn btn-primary btn-sm mr-5" onclick="filterByMarque()">Rechercher</button>

                    <a href="{{ path('export_pdf') }}" class="btn btn-primary btn-sm mr-5">Télécharger en PDF</a>
                </div>
            </div>
            
            <div class="table-responsive">
              <table id="productTable" class="table table-striped custom-table-width">
                <thead class="thead-green">
                  <tr>
                    <th>Image</th>
                    <th>Marque</th>
                    <th>Categorie</th>
                    <th>Critere</th>
                    <th>Prix</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                    {% for product in pagination %}
                        <tr>
                            <td><img src="{{ asset('images/' ~ product.image) }}" alt="Image"></td>
                            <td>{{ product.marque }}</td>
                            <td>{{ product.categorie }}</td>
                            <td>
                              {% if product.critere is not null %}
                                  {{ product.critere.listCritere }}
                              {% else %}
                                  Aucun critère disponible
                              {% endif %}
                          </td>
                            <td>{{ product.prix }}</td>
                            <!-- Ajoutez d'autres cellules pour d'autres attributs -->
                            <td>
                              <a href="{{ path('edit_product', {'id': product.ref}) }}" class="btn btn-warning btn-sm">
                                  <i class="ti-pencil-alt"></i>
                              </a>
                              <button class="btn btn-danger btn-sm" onclick="confirmDelete('{{ product.ref }}')">
                                  <i class="ti-trash"></i>
                              </button>
                          </td>
                            
                        </tr>
                    {% endfor %}
                </tbody>
              </table>
              <div class="text-center mt-4">
                <div style="display: inline-block;">
                    {{ knp_pagination_render(pagination, 'pagination.html.twig') }}
                </div>
            </div>
            </div>
          </div>
        </div>
      </div>
</div>

<!-- Inclusion de SweetAlert2 via CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<!-- Script pour la confirmation de suppression avec SweetAlert2 -->
<script>
    function confirmDelete(id) {
        Swal.fire({
            title: "Est-ce que vous êtes sûr?",
            text: "Vous allez supprimer cet objectif !!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Oui, Supprime-le!",
            cancelButtonText: "Annuler"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "{{ path('delete_product', {'id': '__id__'}) }}".replace('__id__', id);
            }
        });
    }
    function filterObjectifs() {
    var selectedCritere = document.getElementById('critere').value;
    console.log("Critère sélectionné : ", selectedCritere); // Affiche la valeur sélectionnée dans la console

    var rows = document.querySelectorAll('.table-striped tbody tr');
    rows.forEach(function(row) {
        var critereCell = row.querySelector('td:nth-child(4)').innerText; // Assurez-vous que le sélecteur correspond à la colonne contenant les critères
        console.log("Critère dans la ligne : ", critereCell); // Affiche la valeur du critère dans chaque ligne dans la console
        
        if (selectedCritere === '' || critereCell.includes(selectedCritere)) {
            row.style.display = 'table-row';
        } else {
            row.style.display = 'none';
        }
    });
}

    function resetButtonStyle() {
    var button = document.getElementById('critere');
    button.style.backgroundColor = '#56ab2f';
    button.style.backgroundColor = '#56ab2f';
    button.style.borderColor = '#56ab2f';
    button.style.color = '#ffffff';
    button.style.transition = 'background-color 0.3s';
}



function filterByMarque() {
    var input = document.getElementById("searchInput");
    var filter = input.value.toUpperCase();
    
    var rows = document.querySelectorAll('.table-striped tbody tr');
    rows.forEach(function(row) {
        var marqueCell = row.querySelector('td:nth-child(2)').innerText;
        if (marqueCell.toUpperCase().includes(filter)) {
            row.style.display = "";
        } else {
            row.style.display = "none";
        }
    });
}





    </script>
{% endblock %}
