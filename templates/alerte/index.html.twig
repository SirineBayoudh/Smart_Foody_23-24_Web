{% extends 'base_back.html.twig' %}

    {% block body %}
     
        <div class="col-lg-20 grid-margin stretch-card">
            <div class="card">
              <div class="card-body">
                <h4 class="card-title"> Table Alerte </h4>
                {% for type, messages in app.flashes %}
                  {% for message in messages %}
                      <div class="alert alert-{{ type }}" role="alert">
                          {{ message }}
                      </div>
                  {% endfor %}
              {% endfor %}
                <div class="table-responsive">
        
                  <table class="table table-hover" style="margin:auto">
                    <thead>
                      <tr>
                        <tr>
                            <th>Id alerte</th>
                            <th>Stock</th>
                            <th>Description</th>
                            <th>Type</th>
                            <th>Actions</th>
                         
                        </tr>
                      </tr>
                    </thead>
                    <tbody>
                        {% for a in alerts  %}
                        <tr class="{% if a.isType() == false %}alert-unread{% else %}alert-read{% endif %}">
                            <td>{{ a.id_alerte }}</td>
                            <td>{{ a.getId_Stock().getNom() }}</td>
                            <td>{{ a.description_alerte }}</td>
                            <td>{{ a.isType() ? 'Lue' : 'Non lue' }}</td>
                            <td>
                              <a  href="{{ path('update_alert_type', {'id_alerte': a.id_alerte}) }}"  class="btn btn-danger btn-sm" title="Modifier" onclick="return confirmSwal();" style="background-color: #56ab2f; border-color: #56ab2f; transition: background-color 0.3s, border-color 0.3s;"
                              onmouseover="this.style.backgroundColor='#bbddab'; this.style.color=''; this.style.borderColor='#bbddab';" 
                              onmouseout="this.style.backgroundColor='#56ab2f'; this.style.color=''; this.style.borderColor='#56ab2f';">
                              <i class="ti-eye"></i>
                           </a> 
                          </td>
                            {# <td>

    <a href="{{ path('update_alert_type', {'id_alerte': a.id_alerte}) }}" class="alert-link"><button type="button" class="btn btn-warning">Modifier</button></a>
</td>
             #} <td>
    <a href="#" class="btn btn-danger btn-sm" title="Supprimer" style="background-color: #56ab2f; border-color: #56ab2f; transition: background-color 0.3s, border-color 0.3s;"
    onclick="confirmSwal(event, {{ a.id_alerte }})">
    <i class="ti-trash"></i>
</a>
</td>

             {# <td>
              <a href="{{ path('delete_read_alerts', {'alertId': a.id_alerte}) }}" class="btn btn-danger btn-sm" title="Supprimer" style="background-color: #56ab2f; border-color: #56ab2f; transition: background-color 0.3s, border-color 0.3s;"
                  onclick="confirmSwal(event)">
                  <i class="ti-trash"></i>
              </a>
          </td> #}
                </tr>
                    {% endfor %}
                   
                    </tbody>
                  </table>
                </div>
               
              </div>
            </div>
          </div>
       
        
      
  
</div>
<script>
    function confirmSwal(event, alertId) {
        event.preventDefault(); // Empêcher le comportement par défaut du lien
        
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });

        swalWithBootstrapButtons.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                // Si l'utilisateur confirme la suppression, naviguer vers l'URL de suppression
                window.location.href = "{{ path('delete_read_alerts', {'alertId': 'ALERT_ID'}) }}".replace('ALERT_ID', alertId);
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                swalWithBootstrapButtons.fire({
                    title: "Cancelled",
                    text: "Your imaginary file is safe :)",
                    icon: "error"
                });
            }
        });
    }
</script>


    {% endblock %}
    
    {% block stylesheets %}
        <style>
            .selected {
                background-color: red;
            }
            
            /* CSS pour réduire la largeur du tableau */
            .table-responsive {
                max-width: 30%; /* Vous pouvez ajuster la valeur selon vos besoins */
              
            }
        </style>
    {% endblock %}
 
    
    