{% extends 'base_back.html.twig' %}

{% block title %}Add Product{% endblock %}

{% block body %}
<div class="col-10 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Ajouter un objectif</h4>
            <p class="card-description">Veuillez ajouter les informations de l'objectif ci-dessous.</p>
            {% if emptySubmission %}
                {% set atLeastOneChecked = false %}
                {% for choice in form.listCritere %}
                    {% if choice.vars.checked %}
                        {% set atLeastOneChecked = true %}
                    {% endif %}
                {% endfor %}
                {% if not atLeastOneChecked %}
                    <div class="alert alert-danger" role="alert">
                        Veuillez Remplir tous les champs au-dessous.
                    </div>
                {% endif %}
            {% endif %}
            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'id': 'objectif-form'}}) }}
            <div class="form-group">
                {{ form_label(form.libelle, 'Libelle') }}
                {{ form_widget(form.libelle, {'attr': {'class': 'form-control form-control-lg' ~ (form_errors(form.libelle) ? ' is-invalid' : '')}}) }}
                {% if form_errors(form.libelle) %}
                    <div class="invalid-feedback">
                        {{ form_errors(form.libelle) }}
                    </div>
                {% endif %}
            </div>
            {% for choice in form.listCritere %}
                <div class="form-check critere-item">
                    <div style="display: flex; align-items: center;">
                        {{ form_widget(choice, { 'attr': {'class': 'form-check-input custom-checkbox'} }) }}
                        <label class="form-check-label" style="margin-left: 10px; font-weight: bold;">{{ choice.vars.label }}</label>
                    </div>
                </div>
            {% endfor %}
            <span class="error-message">{{ form_errors(form.listCritere) }}</span>
            <button type="submit" class="btn btn-primary mr-2" id="submitBtn" onclick="confirmSubmit()" >Ajouter</button>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<style>
    .custom-checkbox {
        width: 20px; /* Ajustez la largeur selon vos préférences */
        height: 20px; /* Ajustez la hauteur selon vos préférences */
    }
    .btn {
        /* Styles normaux des boutons */
        background-color: #56ab2f;
        border-color: #56ab2f;
        color: #ffffff; /* Couleur du texte */
        transition: background-color 0.3s; /* Transition fluide pour la couleur de fond */
    }
    .btn:hover {
        background-color: #72c22f; /* Nouvelle couleur de fond */
    }
    .error-message {
        color: red; /* Couleur rouge pour les messages d'erreur */
    }
    
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    var formSubmitted = false; // Variable pour contrôler les soumissions multiples

document.getElementById('submitBtn').addEventListener('click', function() {
    if (!formSubmitted) { // Vérifie si le formulaire n'a pas encore été soumis
        Swal.fire({
            title: "Est-ce que vous êtes sûr?",
            text: "Voulez-vous vraiment ajouter cet objectif?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Oui, Ajouter!",
            cancelButtonText: "Annuler",
            allowOutsideClick: false, // Empêcher la fermeture en cliquant à l'extérieur
            allowEscapeKey: false // Empêcher la fermeture en appuyant sur la touche Escape
        }).then((result) => {
            if (result.isConfirmed) {
                formSubmitted = true; // Marque le formulaire comme soumis
                document.getElementById('objectif-form').submit();
            }
        });
    }
});
function confirmSubmit() {
    document.getElementById('submitBtn').setAttribute('disabled', 'disabled');
}

</script>

{% endblock %}
