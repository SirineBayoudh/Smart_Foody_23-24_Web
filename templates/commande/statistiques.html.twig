{% extends 'base_back.html.twig' %}

{% block title %}Statistiques des Commandes{% endblock %}

{% block body %}
   <style>
        /* Style pour centrer le contenu des colonnes */
        .col-lg-6 {
            display: flex;
            flex-direction: column ;
            align-items: center ;
        }

        /* Style pour ajouter de la marge supérieure */
        .mt-5 {
            margin-top: 130px !important; /* Vous pouvez ajuster la valeur selon vos besoins */
        }

        /* Style pour augmenter la taille des statistiques */
        #chartContainer1 canvas,
        #chartContainer2 canvas {
            width: 128%;
            height: 130%;
        }

        /* Animation pour les titres */
        .animated-title {
            animation-name: slideInLeft;
            animation-duration: 1s;
        }

        @keyframes slideInLeft {
            from {
                transform: translateX(-100%);
            }
            to {
                transform: translateX(0);
            }
        }
    </style>
<div class="container-fluid mt-5">
    {% if chartType == 'mixed' %}
        <div class="row justify-content-center"> <!-- Ajout de la classe justify-content-center pour centrer le contenu de la row -->
            <!-- Première moitié de l'écran -->
            <div class="col-lg-6">
                <!-- Graphique pour le nombre de commandes par client en forme de barre -->
                <h3 class="text-center mb-4 animated-title">Nombre de Commandes par Client</h3>
                <div id="chartContainer1">
                    <canvas id="chartNombreCommandes"></canvas>
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const ctx1 = document.getElementById('chartNombreCommandes').getContext('2d');
                        new Chart(ctx1, {
                            type: 'bar',
                            data: {
                                labels: {{ clientsFideles|map(client => 'Client ' ~ client.idClient)|json_encode|raw }},
                                labels: {{ clientsFideles|map(client => 'Client ' ~ client.nomClient ~ ' ' ~ client.prenomClient)|json_encode|raw }},

                                datasets: [{
                                    label: 'Nombre de Commandes',
                                    data: {{ clientsFideles|map(client => client.nombreCommandes)|json_encode|raw }},
                                    backgroundColor: [
                                        'rgba(0, 102, 51, 0.5)',
                                        'rgba(0, 153, 76, 0.5)',
                                        'rgba(0, 204, 102, 0.5)',
                                        'rgba(51, 204, 153, 0.5)',
                                        'rgba(102, 204, 204, 0.5)',
                                        'rgba(153, 204, 204, 0.5)'
                                    ],
                                    borderColor: [
                                        'rgba(0, 102, 51, 1)',
                                        'rgba(0, 153, 76, 1)',
                                        'rgba(0, 204, 102, 1)',
                                        'rgba(51, 204, 153, 1)',
                                        'rgba(102, 204, 204, 1)',
                                        'rgba(153, 204, 204, 1)'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });
                    });
                </script>
            </div>

            <!-- Deuxième moitié de l'écran -->
            <div class="col-lg-6">
                <!-- Graphique pour le total des commandes par client en forme de Polar Area Chart -->
                <h3 class="text-center mb-4 animated-title">Prix Total des Commandes par Client</h3>
                <div id="chartContainer2">
                    <canvas id="chartTotalCommandes"></canvas>
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const ctx2 = document.getElementById('chartTotalCommandes').getContext('2d');
                        new Chart(ctx2, {
                            type: 'polarArea',
                            data: {
                                labels: {{ clientsFideles|map(client => 'Client ' ~ client.idClient)|json_encode|raw }},
                                             labels: {{ clientsFideles|map(client => 'Client ' ~ client.nomClient ~ ' ' ~ client.prenomClient)|json_encode|raw }},
                                datasets: [{
                                    label: 'Total des Commandes',
                                    data: {{ clientsFideles|map(client => client.totalCommande)|json_encode|raw }},
                                    backgroundColor: [
                                        'rgba(0, 102, 51, 0.5)',
                                        'rgba(45, 204, 102, 0.5)',
                                        'rgba(51, 204, 153, 0.5)',
                                        'rgba(102, 204, 204, 0.5)',
                                        'rgba(153, 204, 204, 0.5)',
                                        'rgba(0, 153, 76, 0.5)',
                                    ],
                                    borderColor: [
                                        'rgba(0, 102, 51, 1)',
                                        'rgba(0, 153, 76, 1)',
                                        'rgba(0, 204, 102, 1)',
                                        'rgba(51, 204, 153, 1)',
                                        'rgba(102, 204, 204, 1)',
                                        'rgba(153, 204, 204, 1)'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });
                    });
                </script>
            </div>
        </div>
    {% endif %}
</div>
{% endblock %}
