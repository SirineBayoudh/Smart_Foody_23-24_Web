{% extends 'base_back.html.twig' %}

{% block title %}Liste des Commandes{% endblock %}

{% block body %}
<style>
    .table-hover tbody tr:hover {
        background-color: #bbddab; /* Couleur de fond au survol */
        color: #fff; /* Couleur du texte au survol */
    }
    .card-clickable {
        cursor: pointer;
        transition: transform 0.2s;
        height: 160px;
        font-family: 'Arial', sans-serif;
        margin-bottom: 20px;
    }
    .btn-warning:hover {
        background-color: #388E3C;
    }
    .btn-primary, .btn-warning {
        background-color: #4CAF50;
        color: white;
        border-color: #388E3C;
        animation: slideInUp 1s ease forwards;
    }
    .card-clickable:hover {
        transform: scale(1.05);
    }
    .card-tale {
        background-color: #77bb58 !important;
    }
    .card-dark-blue {
        background-color: #008000 !important;
    }
    .card-light-blue {
        background-color: #77bb58 !important;
    }
    .card-light-danger {
        background-color: #008000 !important;
    }
    .card {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 15px;
    }
    .card-title {
        font-size: 18px;
        color: white !important ;
        font-weight: 600;
        margin-bottom: 10px;
    }
    .pagination {
        margin-top: 20px;
    }

    .pagination ul {
        display: inline-block;
        padding-left: 0;
        margin: 0;
        border-radius: .25rem;
    }

    .pagination li {
        display: inline;
    }

    .pagination li a,
    .pagination li span {
        position: relative;
        float: left;
        padding: 6px 12px;
        margin-left: -1px;
        line-height: 1.42857143;
        color: #428bca;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid #ddd;
    }

    .pagination li.active span {
        z-index: 2;
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }
    .card-count {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 5px;
    }
    .card-info {
        font-size: 14px;
        color: #666;
    }
    .thead-green {
        background-color: #77bb58;
        color: white;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    .table-container {
        max-height: 400px;
        overflow-y: auto;
    }
    .table-frame {
        border: 1px solid #ccc;
        border-radius: 0.5rem;
        overflow: auto;
    }
    .table-frame table {
        width: 100%;
    }
    .input-group-prepend.hover-cursor {
        cursor: pointer;
    }
</style>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-3 mb-4 stretch-card card-clickable" onclick="window.location.href='{{ path('statistiques') }}'">
            <div class="card card-tale">
                <p class="card-title">Afficher les Statistiques</p>
                <p class="card-count">{{ render(controller('App\\Controller\\CommandeController::compteur', {'type': 'statistiques'})) }}</p>
                <p class="card-count"></p>
            </div>
        </div>

        <div class="col-md-3 mb-4 stretch-card card-clickable" onclick="window.location.href='{{ path('commandes_livre') }}'">
            <div class="card card-dark-blue">
                <p class="card-title">Commandes Livrées</p>
                <p class="card-count">{{ render(controller('App\\Controller\\CommandeController::compteur', {'type': 'livré'})) }}</p>
            </div>
        </div>

        <div class="col-md-3 mb-4 stretch-card card-clickable" onclick="window.location.href='{{ path('commandes_non_livre') }}'">
            <div class="card card-light-blue">
                <p class="card-title">Commandes Non Livrées</p>
                <p class="card-count">{{ render(controller('App\\Controller\\CommandeController::compteur', {'type': 'non livrée'})) }}</p>
            </div>
        </div>

        <div class="col-md-3 mb-4 stretch-card card-clickable" onclick="window.location.href='{{ path('commandes_en_cours') }}'">
            <div class="card card-light-danger">
                <p class="card-title">Commandes en cours</p>
                <p class="card-count">{{ render(controller('App\\Controller\\CommandeController::compteur', {'type': 'en cours'})) }}</p>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <!-- Formulaire de recherche -->
           <!-- Formulaire de recherche -->
<div class="container mt-4">
    {{ form_start(search_form, {'attr': {'class': 'form-inline', 'novalidate': 'novalidate'}}) }}
        <div class="form-group">
            {{ form_widget(search_form.search, {'attr': {'class': 'form-control mr-2'}}) }}
            {% if form_errors(search_form.search) %}
                <div class="alert alert-danger">{{ form_errors(search_form.search) }}</div>
            {% endif %}
        </div>
        <button type="submit" class="btn btn-outline-success my-2 my-sm-0">Search</button>
    {{ form_end(search_form) }}
</div> 






        </div>
    </div>

    <div class="row">
        <div class="col-md-12" id="commandeTable">
            <div class="table-frame">
                <div class="table-container">
                    <table class="table table-hover">
                        <thead class="thead-success thead-green">
                            <tr>
                                <th>Nom Client</th>
                                <th>Prénom Client</th>
                                <th>Date Commande</th>
                                <th>Total Commande</th>
                                <th>Remise</th>
                                <th>État</th>
                                <th>Adresse de livraison</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if pagination is defined %}
                                {% for commande in pagination %}
                                    <tr>
                                        <td>{{ commande.utilisateur.nom }}</td>
                                        <td>{{ commande.utilisateur.prenom }}</td>
                                        <td>{{ commande.dateCommande|date('Y-m-d') }}</td>
                                        <td>{{ commande.totaleCommande }}</td>
                                        <td>{{ commande.remise }}</td>
                                        <td>{{ commande.etat }}</td>
                                        <td>{{ commande.address }}</td>
                                      
                                        <td>
                                            <a href="{{ path('commande_detail', {'id': commande.id}) }}" class="btn btn-warning btn-sm">
                                                <img src="{{ asset('images/icons8-eye-100.png') }}" alt="Votre image" width="15" height="15">
                                            </a>
                                        </td> 
                                    </tr>
                                {% endfor %}
                            {% endif %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="text-center mt-4">
                <div style="display: inline-block;">
                    {{ knp_pagination_render(pagination, 'commande/pagination.html.twig') }}
                </div>
            </div>
            <a href="{{ path('commande_pdf_all') }}" class="btn btn-warning btn-icon-text" >PDF Toutes les Commandes</a>
        </div>
    </div>

    <div id="chartContainer" style="display: none;">
        <canvas id="chartClientsFideles"></canvas>
    </div>
</div>
<script>

document.addEventListener('DOMContentLoaded', function () {
    const searchForm = document.getElementById('searchForm');
    const searchInput = document.getElementById('navbar-search-input');
    const searchErrors = document.getElementById('searchErrors');

    searchForm.addEventListener('submit', function(event) {
        event.preventDefault(); // Empêche la soumission du formulaire

        const searchTerm = searchInput.value.trim();

        if (searchTerm === '') {
            displayErrorMessage('Veuillez entrer quelque chose à rechercher.');
        } else if (!isValidInput(searchTerm)) {
            displayErrorMessage('Veuillez entrer une date au format YYYY-MM-DD ou un nom sans chiffres ni caractères spéciaux.');
        } else {
            clearErrorMessage();
            // Envoyer la requête de recherche
            searchCommandes(searchTerm);
        }
    });

    function isValidInput(input) {
        const dateRegex = /^\d{4}-\d{2}-\d{2}$/;
        const nameRegex = /^[A-Za-z]+$/;
        return dateRegex.test(input) || nameRegex.test(input);
    }

    function displayErrorMessage(message) {
        searchErrors.textContent = message;
        searchErrors.style.display = 'block';
        searchErrors.scrollIntoView();
    }

    function clearErrorMessage() {
        searchErrors.textContent = '';
        searchErrors.style.display = 'none';
    }

    // Désactiver les suggestions automatiques du navigateur
    searchInput.setAttribute('autocomplete', 'off');
});

function searchCommandes(searchTerm) {
    // Envoyer la requête de recherche
    // Ici, vous pouvez utiliser AJAX pour interroger le serveur et afficher les résultats de la recherche.
    // Pour cet exemple, je vais simplement simuler une recherche réussie.
    const searchResults = [
        { nom: 'Exemple', date: '2024-04-01' },
        { nom: 'Exemple', date: '2024-04-02' }
    ];

    if (searchResults.length === 0) {
        displayErrorMessage('Aucune commande trouvée avec ces données.');
    } else {
        // Afficher les résultats de la recherche
        displaySearchResults(searchResults);
    }
}

function displaySearchResults(results) {
    // Afficher les résultats de la recherche
    // Vous pouvez les afficher dans une liste ou un tableau, par exemple.
    // Pour cet exemple, je vais simplement les afficher dans la console.
    console.log(results);
}
      $(document).ready(function() {
        // Initialisez l'autocomplete personnalisé
        $('#search-form input[data-autocomplete-url]').autocomplete({
            source: function(request, response) {
                $.getJSON($(this.element).data('autocomplete-url'), {
                    q: request.term
                }, response);
            },
            minLength: 2 // Nombre minimum de caractères pour déclencher l'autocomplete
        });
        
        // Supprimer l'affichage de l'alerte HTML pour les champs vides
        $('#search-form').submit(function() {
            var inputValue = $('#search-form input').val();
            if (inputValue === '') {
                return false; // Empêcher la soumission du formulaire si le champ est vide
            }
        });
    });
</script>






{% endblock %}
