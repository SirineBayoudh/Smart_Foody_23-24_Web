{% extends 'base_accueil.html.twig' %}

{% block bodyConseil %}
	<div class="hero-wrap hero-bread" style="background-image: url('images/bg_1.jpg');">
		<div class="container">
			<div class="row no-gutters slider-text align-items-center justify-content-center">
				<div class="col-md-9 ftco-animate text-center">
					<h1 class="mb-0 bread">Demande des conseils</h1>
				</div>
			</div>
		</div>
	</div>
	<section class="ftco-section contact-section bg-light">
		<div class="container">
			<div style="text-align: center;margin-bottom:60px;margin-top:-40px;">
				<h1>Citation de motivation</h1>
				<blockquote>
					{% if randomQuote %}
						<h5>"{{ randomQuote }}"</h5>
					{% else %}
						<p>No quote available</p>
					{% endif %}
				</blockquote>
			</div>
			<h1>Liste des demandes</h1>
			<div style="overflow: auto; max-height: 400px;">
				<table class="table">
					<thead class="thead-primary">
						<tr class="text-center">
							<th>Statut</th>
							<th>Demande</th>
							<th>Réponse</th>
							<th>Note</th>
							<th>Date</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						{% for conseil in conseils|sort((a, b) => b.dateConseil <=> a.dateConseil) %}
							<tr class="text-center">
								<td class="product-name">{{ conseil.statut }}</td>
								<td class="price">{{ conseil.demande }}</td>
								<td class="quantity">{{ conseil.reponse }}</td>
								<td class="total">{{ conseil.note }}</td>
								<td class="total">{{ conseil.dateConseil|date("d/m/Y") }}</td>
								<td><a href="/updateNoteConseil/{{conseil.idConseil}}"</a>Évaluer</td></tr>
								{% endfor %}
							</tr>
						</tbody>
					</tbody>
				</table>
			</div><br>
			<div class="row block-9">
				<div class="col-md-6 order-md-last d-flex">
					<div class="bg-white p-5 contact-form">
						{% if success %}
							<div class="alert alert-success" role="alert">
								Demande ajoutée avec succès!
							</div>
						{% endif %}
						{% if emptySubmission %}
							<div class="alert alert-danger" role="alert">
								Le formulaire est vide. Veuillez saisir une demande.
							</div>
						{% endif %}
						{% if max %}
							<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>
							<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
							<script>
								alertify.alert('Erreur', 'Vous avez atteint le maximum de 3 demandes par jour.');
							</script>
						{% endif %}
						<h4>Envoyer une demande</h4><br>
						<div class="form-group">
							{{ form_start(f, {'attr': {'novalidate': 'novalidate'}}) }}
							{{ form_label(f.demande) }}
							{{ form_widget(f.demande, {'attr': {'class': 'form-control', 'placeholder': 'Votre demande'}}) }}
							{{ form_errors(f.demande) }}
						</div>
						<div class="form-group">
							<input type="submit" value="Envoyer" class="btn btn-primary py-3 px-5">
						</div>
						{{ form_end(f) }}
					</div>
				</div>
				<div class="bg-white col-md-6 d-flex p-5 contact-form">
					<form action="{{ path('conseil_app') }}" method="get">
						<h4>Calories des aliments (100g)</h4>
						<label for="food" style="margin-top: 20px;">Entrez un aliment :</label>
						<input type="text" id="food" name="food" required style="margin-left: 5px;">
						<input type="submit" value="Chercher" class="btn btn-primary py-1 px-3" style="margin-left: 10px;">
						{% if food %}
							{% if calories is null %}
								<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>
								<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
								<script>
									alertify.alert('Erreur', 'Nombre de calories non disponible.');
								</script>
							{% else %}
								<h4 style="margin-top: 20px;">Nombre de calories pour "{{ food }}" :</h4>
								<h6 style="color: #56AB2F;">{{ calories }}
									calories</h6>
							{% endif %}
						{% endif %}
					</form>
				</div>
			</div>
		</div><br><br><br>
		<div class="container" style="margin-top:-70px;">
			<div class="bg-white row justify-content-center mb-5 pb-3" style="margin-top:40px;">
				<div class="col-md-7 heading-section ftco-animate text-center" style="margin-top:20px;">
					<h3 class="mb-4">Insérer code à barres</h3>
				</div>
			</div>
			<div class="row bg-white d-flex justify-content-center py-5" style="margin-top:-100px;text-align:center;">
				<div class="col-md-6" id="results" style="color: black;"></div>
				<div class="col-md-6 d-flex align-items-center">
					<div class="form-group d-flex">
						<input type="file" id="fileInput">
						<button class="btn btn-primary py-2 px-3" onclick="readBarcode()">Insérer</button>
					</div>
				</div>
			</div>
			<div class="bg-white row justify-content-center mb-5 pb-3" style="margin-top:40px;">
				<div class="col-md-7 heading-section ftco-animate text-center" style="margin-top:20px;">
					<h3 class="mb-4">ChatBot</h3>
				</div>
			</div>
			<div class="row bg-white d-flex justify-content-center py-5" style="margin-top:-100px;text-align:center;">
				<div class="col-md-6" id="chatArea" style="color:black;"></div>
				<div class="col-md-6 d-flex align-items-center">
					<div class="form-group d-flex">
						<input type="text" class="form-control" id="userMessage" placeholder="Message">
						<button class="btn btn-primary py-3 px-5" id="sendBtn" style="margin-left: 5px;">Envoyer</button>
					</div>
				</div>
			</div>
			<div class="row justify-content-center mb-5 pb-3" style="margin-top:50px;">
				<div class="col-md-7 heading-section ftco-animate text-center">
					<h2 class="mb-4">Questions les plus fréquentes</h2>
				</div>
			</div>
			<div class="row ftco-animate">
				<div class="col-md-12">
					<div class="carousel-testimony owl-carousel">
						{% for a in chats %}
							<div class="item">
								<div class="testimony-wrap p-4 pb-5">
									<div class="text text-center">
										<p class="name mb-5 pl-4 line">{{ a.question }}</p>
										<span class="position">{{ a.reponse }}</span>
									</div>
								</div>
							</div>
						{% endfor %}
					</div>
				</div>
			</div>
		</div>
	</section>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		$(document).ready(function () {
$('#sendBtn').click(function () {
var userMessage = $('#userMessage').val();

$.ajax({
url: 'https://api.openai.com/v1/chat/completions',
type: 'POST',
headers: {
'Authorization': 'Bearer ', // Remplacez par votre propre clé API
'Content-Type': 'application/json'
},
data: JSON.stringify(
{
model: 'gpt-3.5-turbo',
messages: [
{
role: 'user',
content: userMessage
}
]
}
),
success: function (response) {
var gptResponse = response.choices[0].message.content;
$('#chatArea').empty();
$('#chatArea').append('<div>Moi: ' + userMessage + '</div>');
$('#chatArea').append('<div>AI BOT: ' + gptResponse + '</div>');
$('#userMessage').val('');
},
error: function (xhr, status, error) {
console.error(error);
}
});
});
});
	</script>
	<script src="https://cdn.jsdelivr.net/npm/dynamsoft-javascript-barcode@8.8.7/dist/dbr.js"></script>
	<script>
		Dynamsoft.License.LicenseManager.initLicense("");

async function readBarcode() {
const fileInput = document.getElementById('fileInput');
const file = fileInput.files[0];

if (! file) {
alert('Please select a file.');
return;
}

try {
const dbr = await Dynamsoft.DBR.BarcodeReader.createInstance();
const results = await dbr.decode(file);

const resultsContainer = document.getElementById('results');
resultsContainer.innerHTML = '';

if (results.length > 0) {
for (const result of results) {
resultsContainer.innerHTML += `<p><strong>Code à barres scanné : </strong>${
result.barcodeText
}</p>`;
const api_key = "";
const url = "https://cors-anywhere.herokuapp.com/https://api.barcodelookup.com/v3/products?barcode=" + result.barcodeText + "&formatted=y&key=" + api_key;

fetch(url).then(response => response.json()).then(data => {
resultsContainer.innerHTML += `<p><strong>Produit : </strong>${
data.products[0].title
}</p>`;
resultsContainer.innerHTML += `<p><strong>Marque : </strong>${
data.products[0].brand
}</p>`;
resultsContainer.innerHTML += `<p><strong>Informations : </strong>${
data.products[0].nutrition_facts
}</p>`;
}).catch(error => {
console.error('Error fetching product information:', error);
});
}
} else {
resultsContainer.innerHTML = '<p>No barcode found.</p>';
}
} catch (error) {
console.error('Error reading barcode:', error);
}
}
	</script>
{% endblock %}
